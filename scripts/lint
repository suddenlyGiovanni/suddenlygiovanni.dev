#! /usr/bin/env bash

# Function to display help message
function display_help {
	echo "Usage: $0 [path] [-- ...additional_eslint_args]"
	echo
	echo "Lint the specified directory or current one if no path is provided."
	echo
	echo "Options:"
	echo "	--help					Display this help message and exit."
	echo
	echo "Additional eslint arguments:"
	echo "	--fix					Automatically fix problems"
	echo "	--debug					Output debugging information"
	echo "	--quiet					Report errors only"
	echo "	--ignore-path <file>	Specify path of ignore file"
	echo "	--report-unused-disable-directives"
	echo "							Adds warning when disabled directive comments are not suppressing a linting error"
	echo "	--max-warnings <number>	Number of warnings to trigger nonzero exit code"
	echo
	echo "To see the full list of available eslint options, refer to:"
	echo "	https://eslint.org/docs/user-guide/command-line-interface"
}

# Assume the first argument is the path unless it starts with --
if [[ $1 = --* ]] || [[ -z $1 ]]; then
	path="."
else
	path=$1
	# Shift the argument list to discard the first argument (captured in path variable)
	shift
fi

# If --help is provided as an argument
if [[ $1 == "--help" ]]; then
	display_help
	exit 0
fi

eslint_args=("$@")

echo "Linting directory: '$path'"

# Pass the additional arguments "$@" to the "pnpm exec eslint" command
pnpm exec eslint \
	"$path" \
	--ext ts,tsx,js,cjs,mjs,jsx \
	--report-unused-disable-directives \
	--max-warnings 100 \
	"${eslint_args[@]}"

linting_status=$?

if [[ $linting_status -eq 0 ]]; then
	echo "✅ Linting successful."
else
	echo "❌ Linting failed."
	exit $linting_status
fi
