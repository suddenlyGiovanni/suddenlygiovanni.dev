name: ðŸ”’ Validate Secrets
permissions:
  contents: read

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to validate secrets for (preview, production)'
        required: true
        type: choice
        options:
          - preview
          - production

jobs:
  validate:
    name: Validate Required Secrets
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: âœ… Verify required secrets are set
        id: verify
        shell: bash
        run: |
          # Common required secrets for all environments
          MISSING_SECRETS=""
          
          # Check common secrets
          if [ -z "${{ secrets.GITHUB_TOKEN }}" ]; then
            MISSING_SECRETS="${MISSING_SECRETS} GITHUB_TOKEN"
          fi
          
          # Environment-specific checks
          if [ "${{ inputs.environment }}" == "production" ]; then
            if [ -z "${{ secrets.FLY_API_TOKEN }}" ]; then
              MISSING_SECRETS="${MISSING_SECRETS} FLY_API_TOKEN"
            fi
          elif [ "${{ inputs.environment }}" == "preview" ]; then
            if [ -z "${{ secrets.FLY_API_TOKEN_APP_REVIEW }}" ]; then
              MISSING_SECRETS="${MISSING_SECRETS} FLY_API_TOKEN_APP_REVIEW"
            fi
            if [ -z "${{ secrets.OCTOKIT_RESUME_TOKEN }}" ]; then
              MISSING_SECRETS="${MISSING_SECRETS} OCTOKIT_RESUME_TOKEN"
            fi
            if [ -z "${{ secrets.DELETE_DEPLOYMENT_PAT_TOKEN }}" ]; then
              MISSING_SECRETS="${MISSING_SECRETS} DELETE_DEPLOYMENT_PAT_TOKEN"
            fi
          fi
          
          # Fail if any secrets are missing
          if [ ! -z "$MISSING_SECRETS" ]; then
            echo "Missing required secrets for ${{ inputs.environment }} environment: $MISSING_SECRETS"
            exit 1
          fi
          
          echo "All required secrets for ${{ inputs.environment }} environment are set! âœ…"
