name: üöÄ Deploy Preview
permissions:
  contents: read
  packages: write
  actions: read
  deployments: write
  statuses: write
  pull-requests: write
on:
  pull_request:
    types: [ opened, reopened, synchronize ]
concurrency:
  group: ${{ github.workflow }}-pr-${{ github.event.number }}
  cancel-in-progress: true


jobs:
  deploy_preview:
    name: Build and Deploy Preview to Fly.io
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    environment:
      name: fly-preview-${{ github.event.number }}
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for flyctl release naming

      - name: Prepare Repository Variables
        id: vars
        uses: ./.github/actions/prepare-repo-variables

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: üê≥ Build and Push Docker Image for Preview
        id: docker_build_push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/app/Dockerfile
          push: true # Push the image to the registry
          tags: ${{ steps.vars.outputs.IMAGE_NAME_PREVIEW }}:pr-${{ github.event.number }}-${{ github.sha }}
          # Cache configuration (using registry)
          cache-from: type=registry,ref=${{ steps.vars.outputs.CACHE_IMAGE_NAME }}:latest
          cache-to: type=registry,ref=${{ steps.vars.outputs.CACHE_IMAGE_NAME }}:latest,mode=max
      
      - name: üö¢ Deploy PR app to Fly.io
        id: deploy
        uses: superfly/fly-pr-review-apps@1.5.0
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_APP_REVIEW }}
          FLY_REGION: ams
          FLY_ORG: personal
        with:
          config: ./packages/app/fly.review.yaml
          name: ${{ steps.vars.outputs.FLY_APP_NAME }}
          secrets: GITHUB_TOKEN=${{ secrets.OCTOKIT_RESUME_TOKEN }}
          image: ${{ steps.vars.outputs.IMAGE_NAME_PREVIEW }}:pr-${{ github.event.number }}-${{ github.sha }}
